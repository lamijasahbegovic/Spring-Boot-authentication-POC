plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.github.sherter.google-java-format' version '0.9'
}

group = 'com.lamija'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.6'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	implementation 'org.liquibase:liquibase-core:4.18.0'
	implementation 'org.springframework.security:spring-security-test'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	compileOnly 'org.projectlombok:lombok'
	compileOnly "org.springframework.boot:spring-boot-configuration-processor"
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation group: 'io.rest-assured', name: 'spring-mock-mvc', version: '5.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
	useJUnitPlatform()
}

googleJavaFormat {
    options style: 'AOSP'
    source 'src/main'
    source 'src/test'
    include '**/*.java'
}

apply from: "$projectDir/gradle/preCommit.gradle"
